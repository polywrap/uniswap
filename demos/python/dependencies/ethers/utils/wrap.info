„§version£0.1¤name¬ethers-utils¤type¤wasm£abi‚§version£0.1ªmoduleTypeƒ¤type¦Module¤kindÌ€§methods™‡¤name¶generateCreate2Address¦return…¤type¦String¤name¶generateCreate2Address¨requiredÃ¤kind"¦scalar„¤name¶generateCreate2Address¤type¦String¨requiredÃ¤kind§commentÙcGenerates a deterministic Ethereum address using the CREATE2 opcode.
Returns the generated address.¤type¦Method¤kind@¨requiredÃ©arguments“…¤type¦String¤name§address¨requiredÃ¤kind"¦scalar„¤name§address¤type¦String¨requiredÃ¤kind…¤type¦String¤name¤salt¨requiredÃ¤kind"¦scalar„¤name¤salt¤type¦String¨requiredÃ¤kind…¤type¦String¤name¨initCode¨requiredÃ¤kind"¦scalar„¤name¨initCode¤type¦String¨requiredÃ¤kind‡¤nameºkeccak256BytesEncodePacked¦return…¤type¦String¤nameºkeccak256BytesEncodePacked¨requiredÃ¤kind"¦scalar„¤nameºkeccak256BytesEncodePacked¤type¦String¨requiredÃ¤kind§commentÙ“The input string of bytes will be `encode_packed`,
and then hashed using the Keccak-256 algorithm.
Returns the resulting hash as a string of bytes.¤type¦Method¤kind@¨requiredÃ©arguments‘…¤type¦String¤name¥value¨requiredÃ¤kind"¦scalar„¤name¥value¤type¦String¨requiredÃ¤kind‡¤name©keccak256¦return…¤type¦String¤name©keccak256¨requiredÃ¤kind"¦scalar„¤name©keccak256¤type¦String¨requiredÃ¤kind§commentÙgHashes the given input using the Keccak-256 algorithm.
Returns the resulting hash as a string of bytes.¤type¦Method¤kind@¨requiredÃ©arguments‘…¤type¦String¤name¥value¨requiredÃ¤kind"¦scalar„¤name¥value¤type¦String¨requiredÃ¤kind‡¤nameµencodeMetaTransaction¦return…¤type¦String¤nameµencodeMetaTransaction¨requiredÃ¤kind"¦scalar„¤nameµencodeMetaTransaction¤type¦String¨requiredÃ¤kind§commentÙ”Encodes a meta-transaction into a string that can be
signed and broadcast to the Ethereum network.
Returns the encoded meta-transaction as a string.¤type¦Method¤kind@¨requiredÃ©arguments”„¤type¦BigInt¤name©operation¤kind"¦scalarƒ¤name©operation¤type¦BigInt¤kind…¤type¦String¤name¢to¨requiredÃ¤kind"¦scalar„¤name¢to¤type¦String¨requiredÃ¤kind…¤type¦BigInt¤name¥value¨requiredÃ¤kind"¦scalar„¤name¥value¤type¦BigInt¨requiredÃ¤kind…¤type¦String¤name¤data¨requiredÃ¤kind"¦scalar„¤name¤data¤type¦String¨requiredÃ¤kind‡¤name¬encodeParams¦return…¤type¦String¤name¬encodeParams¨requiredÃ¤kind"¦scalar„¤name¬encodeParams¤type¦String¨requiredÃ¤kind§commentÙƒEncodes the given parameters into a string that can be
used in an Ethereum transaction.
Returns the encoded parameters as a string.¤type¦Method¤kind@¨requiredÃ©arguments’…¤type¨[String]¤name¥types¨requiredÃ¤kind"¥array†¤name¥types¤type¨[String]¨requiredÃ¦scalar„¤name¥types¤type¦String¨requiredÃ¤kind¤kind¤item„¤name¥types¤type¦String¨requiredÃ¤kind…¤type¨[String]¤name¦values¨requiredÃ¤kind"¥array†¤name¦values¤type¨[String]¨requiredÃ¦scalar„¤name¦values¤type¦String¨requiredÃ¤kind¤kind¤item„¤name¦values¤type¦String¨requiredÃ¤kind‡¤name®encodeFunction¦return…¤type¦String¤name®encodeFunction¨requiredÃ¤kind"¦scalar„¤name®encodeFunction¤type¦String¨requiredÃ¤kind§commentÙ‰Encodes the given function call into a string that can be used
in an Ethereum transaction.
Returns the encoded function call as a string.¤type¦Method¤kind@¨requiredÃ©arguments’…¤type¦String¤name¦method¨requiredÃ¤kind"¦scalar„¤name¦method¤type¦String¨requiredÃ¤kind„¤type¨[String]¤name¤args¤kind"¥array…¤name¤args¤type¨[String]¦scalar„¤name¤args¤type¦String¨requiredÃ¤kind¤kind¤item„¤name¤args¤type¦String¨requiredÃ¤kind‡¤name¥toWei¦return…¤type¦String¤name¥toWei¨requiredÃ¤kind"¦scalar„¤name¥toWei¤type¦String¨requiredÃ¤kind§commentÙrConverts the given value in Ether to its equivalent value in Wei.
Returns the equivalent value in Wei as a string.¤type¦Method¤kind@¨requiredÃ©arguments‘…¤type¦String¤name£eth¨requiredÃ¤kind"¦scalar„¤name£eth¤type¦String¨requiredÃ¤kind‡¤name¥toEth¦return…¤type¦String¤name¥toEth¨requiredÃ¤kind"¦scalar„¤name¥toEth¤type¦String¨requiredÃ¤kind§commentÙtConverts the given value in Wei to its equivalent value in Ether.
Returns the equivalent value in Ether as a string.¤type¦Method¤kind@¨requiredÃ©arguments‘…¤type¦String¤name£wei¨requiredÃ¤kind"¦scalar„¤name£wei¤type¦String¨requiredÃ¤kind‡¤name¬solidityPack¦return…¤type¦String¤name¬solidityPack¨requiredÃ¤kind"¦scalar„¤name¬solidityPack¤type¦String¨requiredÃ¤kind§commentÙ‚Packs the given values into a tightly-packed byte array using
Solidity's packing rules.
Returns the packed byte array as a string.¤type¦Method¤kind@¨requiredÃ©arguments’…¤type¨[String]¤name¥types¨requiredÃ¤kind"¥array†¤name¥types¤type¨[String]¨requiredÃ¦scalar„¤name¥types¤type¦String¨requiredÃ¤kind¤kind¤item„¤name¥types¤type¦String¨requiredÃ¤kind…¤type¨[String]¤name¦values¨requiredÃ¤kind"¥array†¤name¦values¤type¨[String]¨requiredÃ¦scalar„¤name¦values¤type¦String¨requiredÃ¤kind¤kind¤item„¤name¦values¤type¦String¨requiredÃ¤kind